# Generated by Django 3.1.4 on 2020-12-20 13:52

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('brewbrew', '0007_auto_20201220_1350'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='brew',
            name='dry_hopping_hop1',
        ),
        migrations.RemoveField(
            model_name='brew',
            name='dry_hopping_hop1_quantity',
        ),
        migrations.RemoveField(
            model_name='brew',
            name='dry_hopping_hop2',
        ),
        migrations.RemoveField(
            model_name='brew',
            name='dry_hopping_hop2_quantity',
        ),
        migrations.RemoveField(
            model_name='brew',
            name='dry_hopping_hop3',
        ),
        migrations.RemoveField(
            model_name='brew',
            name='dry_hopping_hop3_quantity',
        ),
        migrations.RemoveField(
            model_name='brew',
            name='dry_hopping_time',
        ),
        migrations.RemoveField(
            model_name='brew',
            name='fermentation_time',
        ),
        migrations.RemoveField(
            model_name='brew',
            name='name',
        ),
        migrations.RemoveField(
            model_name='brew',
            name='recipe',
        ),
        migrations.AddField(
            model_name='brew',
            name='adjuncts_start_time',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Start of the adjuncts/dryhopping stage'),
        ),
        migrations.AddField(
            model_name='brew',
            name='batch_name',
            field=models.CharField(default='', help_text='Batch name', max_length=50),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='brew',
            name='boiling_duration',
            field=models.IntegerField(default=0, help_text='Duration of boiling step in minutes'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='brew',
            name='boiling_start_time',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Start of the boiling stage'),
        ),
        migrations.AddField(
            model_name='brew',
            name='brew_comments',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='brew',
            name='brew_start_time',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Start of the brewing stage'),
        ),
        migrations.AddField(
            model_name='brew',
            name='cooling_end_time',
            field=models.DateTimeField(blank=True, null=True, verbose_name='End of the cooling stage'),
        ),
        migrations.AddField(
            model_name='brew',
            name='cooling_start_time',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Start of the cooling stage'),
        ),
        migrations.AddField(
            model_name='brew',
            name='fermentation_comments',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='brew',
            name='filtration_start_time',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Start of the filtration stage'),
        ),
        migrations.AddField(
            model_name='brew',
            name='filtration_water_quantity',
            field=models.FloatField(default=0, help_text='Liters of waters to add during filtration'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='brew',
            name='mashing_water_quantity',
            field=models.FloatField(default=0, help_text='Liters of water to add during mashing'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='brew',
            name='start_date',
            field=models.DateField(default=datetime.datetime(2020, 12, 20, 13, 52, 37, 47394), help_text='Date to start brewing'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='brew',
            name='total_quantity',
            field=models.IntegerField(blank=True, help_text='Quantity of beer obtained with this brew', null=True),
        ),
        migrations.AddField(
            model_name='brew',
            name='whirlpool_start_time',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Start of the whirlpool stage'),
        ),
        migrations.AlterField(
            model_name='brew',
            name='fermentation_tank',
            field=models.ForeignKey(help_text='Tank in which to ferment', on_delete=django.db.models.deletion.PROTECT, to='brewbrew.tank'),
        ),
        migrations.CreateModel(
            name='BrewYeastBatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField(help_text='Quantity to use in the brew')),
                ('brew', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='brewbrew.brew')),
                ('yeast_batch', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='brewbrew.ingredientbatch')),
            ],
        ),
        migrations.CreateModel(
            name='BrewWhirlpoolIngredientBatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField(help_text='Quantity to use in the brew')),
                ('brew', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='brewbrew.brew')),
                ('ingredient_batch', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='brewbrew.ingredientbatch')),
            ],
        ),
        migrations.CreateModel(
            name='BrewMashingIngredientBatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField(help_text='Quantity to use in the brew')),
                ('brew', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='brewbrew.brew')),
                ('ingredient_batch', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='brewbrew.ingredientbatch')),
            ],
        ),
        migrations.CreateModel(
            name='BrewFermentationStep',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the fermentation step', max_length=50)),
                ('temperature', models.FloatField(help_text='Temperature during this fermentation step')),
                ('duration', models.IntegerField(help_text='Duration of this fermentation step in days')),
                ('brew', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='brewbrew.brew')),
            ],
        ),
        migrations.CreateModel(
            name='BrewFermentationAnalysis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.IntegerField(help_text='Day number from the start of fermentation when the analysis occured')),
                ('plateau_degree_or_density', models.FloatField(help_text='Gravity expressed in Â°p or sg')),
                ('brew', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='brewbrew.brew')),
            ],
        ),
        migrations.CreateModel(
            name='BrewBrewingStep',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temperature', models.FloatField(help_text='Temperature during this brewing step')),
                ('duration', models.IntegerField(help_text='Duration of this brewing step in minutes')),
                ('brew', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='brewbrew.brew')),
            ],
        ),
        migrations.CreateModel(
            name='BrewBoilingIngredientBatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField(help_text='Quantity to use in the brew')),
                ('time', models.IntegerField(help_text='When the ingredient was added (in minutes from the end of boiling)')),
                ('brew', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='brewbrew.brew')),
                ('ingredient_batch', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='brewbrew.ingredientbatch')),
            ],
        ),
        migrations.CreateModel(
            name='BrewAdjunctBatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField(help_text='Quantity to use in the brew')),
                ('brew', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='brewbrew.brew')),
                ('ingredient_batch', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='brewbrew.ingredientbatch')),
            ],
        ),
        migrations.AddField(
            model_name='brew',
            name='adjuncts',
            field=models.ManyToManyField(help_text='Adjuncts/Hops to add during fermentation', related_name='brew_adjuncts', through='brewbrew.BrewAdjunctBatch', to='brewbrew.IngredientBatch'),
        ),
        migrations.AddField(
            model_name='brew',
            name='boiling_ingredients',
            field=models.ManyToManyField(help_text='Ingredients to add during boiling', related_name='brew_boiling', through='brewbrew.BrewBoilingIngredientBatch', to='brewbrew.IngredientBatch'),
        ),
        migrations.AddField(
            model_name='brew',
            name='mashing_ingredients',
            field=models.ManyToManyField(help_text='Ingredients to add during mashing', related_name='brew_mashing', through='brewbrew.BrewMashingIngredientBatch', to='brewbrew.IngredientBatch'),
        ),
        migrations.AddField(
            model_name='brew',
            name='whirlpool_ingredients',
            field=models.ManyToManyField(help_text='Ingredients to add during whirlpool', related_name='brew_whirlpool', through='brewbrew.BrewWhirlpoolIngredientBatch', to='brewbrew.IngredientBatch'),
        ),
        migrations.AddField(
            model_name='brew',
            name='yeasts',
            field=models.ManyToManyField(help_text='Yeasts to add before fermentation', related_name='brew_yeasts', through='brewbrew.BrewYeastBatch', to='brewbrew.IngredientBatch'),
        ),
    ]
