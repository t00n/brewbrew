# Generated by Django 3.1.4 on 2020-12-20 12:24

import brewbrew.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[(brewbrew.models.IngredientType['GRAIN'], 'Grain'), (brewbrew.models.IngredientType['HOP'], 'Hop'), (brewbrew.models.IngredientType['YEAST'], 'Yeast'), (brewbrew.models.IngredientType['ADJUNCT'], 'Adjunct'), (brewbrew.models.IngredientType['FRUIT'], 'Fruit')], help_text='The type of ingredient', max_length=50)),
                ('variety', models.CharField(help_text='Name/variety of the ingredient', max_length=50)),
                ('unit', models.CharField(help_text='Unit of measure of the ingredient', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the recipe', max_length=50)),
                ('mashing_water_quantity', models.FloatField(help_text='Liters of water to add during mashing')),
                ('filtration_water_quantity', models.FloatField(help_text='Liters of waters to add during filtration')),
                ('boiling_duration', models.IntegerField(help_text='Duration of boiling step in minutes')),
            ],
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the supplier', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Tank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name/number of the tank', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='RecipeYeast',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField(help_text='Quantity to use in the recipe')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='brewbrew.recipe')),
                ('yeast', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='brewbrew.ingredient')),
            ],
        ),
        migrations.CreateModel(
            name='RecipeWhirlpoolIngredient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField(help_text='Quantity to use in the recipe')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='brewbrew.recipe')),
                ('whirlpool_ingredient', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='brewbrew.ingredient')),
            ],
        ),
        migrations.CreateModel(
            name='RecipeMashingIngredient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField(help_text='Quantity to use in the recipe')),
                ('mashing_ingredient', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='brewbrew.ingredient')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='brewbrew.recipe')),
            ],
        ),
        migrations.CreateModel(
            name='RecipeFermentationStep',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the fermentation step', max_length=50)),
                ('temperature', models.FloatField(help_text='Temperature during this fermentation step')),
                ('duration', models.IntegerField(help_text='Duration of this fermentation step in days')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='brewbrew.recipe')),
            ],
        ),
        migrations.CreateModel(
            name='RecipeBrewingStep',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temperature', models.FloatField(help_text='Temperature during this brewing step')),
                ('duration', models.IntegerField(help_text='Duration of this brewing step in minutes')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='brewbrew.recipe')),
            ],
        ),
        migrations.CreateModel(
            name='RecipeBoilingIngredient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField(help_text='Quantity to use in the recipe')),
                ('time', models.IntegerField(help_text='When to add the ingredient (in minutes from the end of boiling)')),
                ('boiling_ingredient', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='brewbrew.ingredient')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='brewbrew.recipe')),
            ],
        ),
        migrations.CreateModel(
            name='RecipeAdjunct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField(help_text='Quantity to use in the recipe')),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='brewbrew.ingredient')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='brewbrew.recipe')),
            ],
        ),
        migrations.AddField(
            model_name='recipe',
            name='adjuncts',
            field=models.ManyToManyField(help_text='Adjuncts/Hops to add during fermentation', related_name='recipe_adjuncts', through='brewbrew.RecipeAdjunct', to='brewbrew.Ingredient'),
        ),
        migrations.AddField(
            model_name='recipe',
            name='boiling_ingredients',
            field=models.ManyToManyField(help_text='Ingredients to add during boiling', related_name='recipe_boiling', through='brewbrew.RecipeBoilingIngredient', to='brewbrew.Ingredient'),
        ),
        migrations.AddField(
            model_name='recipe',
            name='mashing_ingredients',
            field=models.ManyToManyField(help_text='Ingredients to add during mashing', related_name='recipe_mashing', through='brewbrew.RecipeMashingIngredient', to='brewbrew.Ingredient'),
        ),
        migrations.AddField(
            model_name='recipe',
            name='whirlpool_ingredients',
            field=models.ManyToManyField(help_text='Ingredients to add during whirlpool', related_name='recipe_whirlpool', through='brewbrew.RecipeWhirlpoolIngredient', to='brewbrew.Ingredient'),
        ),
        migrations.AddField(
            model_name='recipe',
            name='yeasts',
            field=models.ManyToManyField(help_text='Yeasts to add before fermentation', related_name='recipe_yeasts', through='brewbrew.RecipeYeast', to='brewbrew.Ingredient'),
        ),
        migrations.CreateModel(
            name='IngredientBatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_number', models.CharField(help_text='Batch number', max_length=50)),
                ('bill_number', models.CharField(help_text='Bill number', max_length=50)),
                ('quantity', models.FloatField(help_text='Quantity in the batch')),
                ('ingredient', models.ForeignKey(help_text='Ingredient', on_delete=django.db.models.deletion.RESTRICT, to='brewbrew.ingredient')),
                ('supplier', models.ForeignKey(help_text='Supplier', on_delete=django.db.models.deletion.RESTRICT, to='brewbrew.supplier')),
            ],
        ),
        migrations.CreateModel(
            name='Brew',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('recipe', models.TextField()),
                ('fermentation_time', models.IntegerField()),
                ('dry_hopping_time', models.IntegerField()),
                ('dry_hopping_hop1_quantity', models.FloatField(blank=True, null=True)),
                ('dry_hopping_hop2_quantity', models.FloatField(blank=True, null=True)),
                ('dry_hopping_hop3_quantity', models.FloatField(blank=True, null=True)),
                ('dry_hopping_hop1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='brew_dry_hopping_hop1', to='brewbrew.ingredient')),
                ('dry_hopping_hop2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='brew_dry_hopping_hop2', to='brewbrew.ingredient')),
                ('dry_hopping_hop3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='brew_dry_hopping_hop3', to='brewbrew.ingredient')),
                ('fermentation_tank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='brewbrew.tank')),
                ('original_recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='brewbrew.recipe')),
            ],
        ),
    ]
